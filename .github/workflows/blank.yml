name: CI
on:
  push:
    branches: [ "playit-only" ]
  pull_request:
    branches: [ "playit-only" ]
  workflow_dispatch:
  schedule:
    - cron: '0 */5 * * *'  # Run every 5 hours
jobs:
  build:
    runs-on: ubuntu-24.04

    env:
      GITHUB_TOKEN: ${{ secrets.FINE_GRAINED_PAT }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
          fetch-tags: false
          persist-credentials: true
          token: ${{ secrets.FINE_GRAINED_PAT }}

      - uses: graalvm/setup-graalvm@v1
        with:
          java-version: '22'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Debug - List directory contents
        run: ls -la

      # Основной запуск с условием для исключения автокоммита каждые 30 секунд
      - name: Run Spigot and Playit with 30-second commits and workflow deletion
        if: "!contains(github.event.head_commit.message, 'Auto commit every 30 seconds')"
        continue-on-error: true
        env:
          FINE_GRAINED_PAT: ${{ secrets.FINE_GRAINED_PAT }}
          REPO: ${{ github.repository }}
          PLAYIT_SECRET: ${{ secrets.PLAYIT_SECRET }}
        run: |
          cd "$GITHUB_WORKSPACE"
          
          # Запуск playit (предполагается, что файл playit-linux-amd64 есть в репозитории)
          chmod +x playit-linux-amd64
          
          # Записываем секрет в конфигурационный файл playit.toml
          echo "$PLAYIT_SECRET" > playit.toml

          # Запуск Spigot сервера в фоне с логами (замените команду на вашу)
          java -XX:+UseG1GC -XX:+ParallelRefProcEnabled -XX:MaxGCPauseMillis=200 \
            -XX:+UnlockExperimentalVMOptions -XX:+DisableExplicitGC \
            -XX:+AlwaysPreTouch -XX:G1NewSizePercent=30 \
            -XX:G1MaxNewSizePercent=40 -XX:G1HeapRegionSize=8M \
            -XX:G1ReservePercent=20 -XX:G1HeapWastePercent=5 \
            -XX:G1MixedGCCountTarget=4 \
            -XX:InitiatingHeapOccupancyPercent=15 \
            -XX:G1MixedGCLiveThresholdPercent=90 \
            -XX:G1RSetUpdatingPauseTimePercent=5 \
            -XX:SurvivorRatio=32 \
            -XX:+PerfDisableSharedMem \
            -XX:MaxTenuringThreshold=1 \
            -Dusing.aikars.flags=https://mcflags.emc.gs \
            -Daikars.new.flags=true \
            -Xms16G -Xmx16G -jar spigot.jar nogui 2>&1 | sed '/login:/s/.*/<REDACTED>/ &'

          SPIGOT_PID=$!
          echo "Spigot started with PID $SPIGOT_PID"

          # Запуск playit в фоне
          ./playit-linux-amd64 2>&1 | sed '/login:/s/.*/<REDACTED>/ &'
          
          PLAYIT_PID=$!
          echo "playit started with PID $PLAYIT_PID"

          - name: Main loop for auto-restart and workflow management
            if: "!contains(github.event.head_commit.message, 'Auto commit every 30 seconds [no ci]')"
            run: |
             set -e

          REPO="${{ github.repository }}"
          FINE_GRAINED_PAT="${{ secrets.FINE_GRAINED_PAT }}"
          START_TIME=$(date +%s)
          
          start_spigot() {
          echo "Starting Spigot..."
          java -XX:+UseG1GC ... (ваши параметры) ... -jar spigot.jar nogui 2>&1 | sed '/login:/s/.*/<REDACTED>/'
          SPIGOT_PID=$!
          echo "Spigot PID=$SPIGOT_PID"
          }

          start_playit() {
          echo "Starting PlayIt..."
          ./playit-linux-amd64 2>&1 | sed '/login:/s/.*/<REDACTED>/ &'
          PLAYIT_PID=$!
          echo "PlayIt PID=$PLAYIT_PID"
          }

          cancel_old_workflow_runs() {
          echo "Cancelling old workflows..."
          curl -sSL --fail --retry 3 --retry-delay 5 \
            -H "Authorization: token $FINE_GRAINED_PAT" \
           "https://api.github.com/repos/$REPO/actions/runs" | jq '.workflow_runs[] | select(.head_commit.message | contains("Auto commit every 30 seconds [no ci]")) | .id' | while read id; do
          if [ "$id" != "null" ]; then
          echo "Cancelling run ID=$id"
          curl -sSL --fail --retry 3 --retry-delay 5 \
            -X POST \
            -H "Authorization: token $FINE_GRAINED_PAT" \
            "https://api.github.com/repos/$REPO/actions/runs/$id/cancel"
          fi
          done
          }

          create_new_workflow_run() {
          curl -X POST \
            -H "Authorization: token $FINE_GRAINED_PAT" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/$REPO/actions/workflows/blank.yml/dispatches" \
          -d '{"ref":"playit-only"}'
          echo "Triggered new workflow run."
          }

          while true; do
           if ! kill -0 "$SPIGOT_PID" >/dev/null 2>&1; then
          start_spigot
          fi

          if ! kill -0 "$PLAYIT_PID" >/dev/null 2>&1 || [ "$ELAPSED" -ge 18000 ]; then
          if ! kill -0 "$PLAYIT_PID" >/dev/null 2>&1; then
          echo "PlayIt stopped."
          else
          echo "Workflow running for over 5 hours."
          fi

          create_new_workflow_run

          exit 0
          fi

          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

          git add .

          git reset -- playit.toml playit.log tunnel-config.yml credentials.json logs/

          if git commit --message="Auto commit every 30 seconds [no ci]" ; then
          for i in {1..3}; do
          if git push https://x-access-token:${FINE_GRAINED_PAT}@github.com/${REPO}.git HEAD:playit-only --force; then
            echo "Push succeeded on attempt $i"
            break
          else
            echo "Push failed on attempt $i, retrying..."
            git pull --rebase || true
            sleep 2
          fi
          done
          else
          echo "No changes to commit."
          fi

          cancel_old_workflow_runs

          sleep 30
          done

      - name: Rerun previous workflow on failure (optional)
        if: failure()
        env:
           GITHUB_TOKEN: ${{ secrets.FINE_GRAINED_PAT }}
        run: |
          curl -X POST \
          -H "Authorization: token $GITHUB_TOKEN" \
          -H "Accept: application/vnd.github.v3+json" \
           https://api.github.com/repos/${{ github.repository }}/actions/workflows/blank.yml/dispatches \
          -d '{"ref":"playit-only"}'
           echo "Triggered rerun due to failure."

